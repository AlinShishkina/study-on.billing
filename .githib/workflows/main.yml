name: CI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4.5'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql
          coverage: pcov
          tools: composer

      - name: Configure environment files
        run: |
          cat << EOF > .env.local
          DATABASE_URL="pgsql://postgres:admin@postgres:5432/study_on_billing"
          JWT_SECRET_KEY="%kernel.project_dir%/config/jwt/private.pem"
          JWT_PUBLIC_KEY="%kernel.project_dir%/config/jwt/public.pem"
          JWT_PASSPHRASE=passphrase
          EOF
          cat .env.local
          cat << EOF > .env.test.local
          DATABASE_URL=pgsql://postgres:admin@postgres:5432/study_on_billing_test
          JWT_SECRET_KEY=%kernel.project_dir%/config/jwt/private.pem
          JWT_PUBLIC_KEY=%kernel.project_dir%/config/jwt/public.pem
          JWT_PASSPHRASE=passphrase
          EOF
          cat .env.test.local

      - name: Install Composer dependencies
        run: composer install --no-progress --no-suggest --prefer-dist

      - name: Setup Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.27.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
          docker-compose build
          docker-compose up -d
          docker ps -a

      - name: Generate JWT keys
        run: |
          php bin/console lexik:jwt:generate-keypair
          php bin/console lexik:jwt:check-config

      - name: Prepare test database and run migrations
        run: |
          docker-compose exec -T php bin/console doctrine:database:drop --force --env=test || true
          docker-compose exec -T php bin/console doctrine:database:create --env=test
          docker-compose exec -T php bin/console doctrine:migrations:migrate -n --env=test
          docker-compose exec -T php bin/console doctrine:fixtures:load -n --env=test

      - name: Run PHPUnit tests
        run: docker-compose exec -T php bin/phpunit

      - name: Add label 'tested' to PR
        if: github.event_name == 'pull_request'
        uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: tested
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
